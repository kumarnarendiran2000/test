//div[div[svg]]/following-sibling::div/button[div[contains(text(), 'Logout')]]

//div[div/svg and div/button/div[contains(text(), 'Logout')]]

//div[div[2]/svg and div[3]/button[contains(text(), 'Logout')]]

//div[div[2]//svg and div[3]//button[contains(text(), 'Logout')]]


const expectedName = testPack.name;
const welcomeText = await $('//h1[contains(text(), "Welcome back,")]');
await expect(welcomeText).toBeDisplayed();

// Extract actual text and validate against testPack.name
const actualText = await welcomeText.getText();
const actualName = actualText.replace('Welcome back,', '').trim(); // Extract name part
expect(actualName).toEqual(expectedName);


//div[.//svg and .//button[div[contains(text(), 'Logout')]]]

//div[div/svg and div/button[div[contains(text(), 'Logout')]]]

//div[.//svg and .//button[div[contains(text(), 'Logout')]]]

//div[div/svg and .//button[div[contains(text(), 'Logout')]]]


const fiveStarRating = $("//span[contains(text(),'Great')]");
await fiveStarRating.waitForDisplayed();
await fiveStarRating.click();


const feedbackTextarea = $("//textarea[@placeholder='Enter your feedback here']");
await feedbackTextarea.waitForDisplayed();
await feedbackTextarea.setValue("test");


async function submitFeedback() {
    const fiveStarRating = $("//span[contains(text(),'Great')]");
    await fiveStarRating.waitForDisplayed();
    await fiveStarRating.click();

    const feedbackTextarea = $("//textarea[@placeholder='Enter your feedback here']");
    await feedbackTextarea.waitForDisplayed();
    await feedbackTextarea.setValue("test");

    const sendButton = $("//button[@aria-label='Send']");
    await sendButton.waitForDisplayed();
    await sendButton.click();
}

//span[contains(text(),'Great')]/parent::div/preceding-sibling::button