describe('Verify Pension Values on React Native Web', () => {
  let webTotalValue, webInvestmentGrowth;

  it('Fetch Total Value and Investment Growth from React Native Web App', async () => {
    // Locate elements in React Native Web app
    const totalValueElement = await $('//span[contains(text(), "£")]'); // Total Value
    const investmentGrowthElement = await $('//div[contains(@class, "text-success-700") or contains(text(), "+")]'); // Investment Growth

    // Ensure elements are displayed before fetching text
    await expect(totalValueElement).toBeDisplayed();
    await expect(investmentGrowthElement).toBeDisplayed();

    // Extract text values
    webTotalValue = await totalValueElement.getText();
    webInvestmentGrowth = await investmentGrowthElement.getText();

    console.log(`Web App - Total Value: ${webTotalValue}`);
    console.log(`Web App - Investment Growth: ${webInvestmentGrowth}`);
  });

  it('Validate Pension Values Are Not Empty', async () => {
    // Ensure values are properly fetched
    expect(webTotalValue).not.toBe('');
    expect(webInvestmentGrowth).not.toBe('');

    console.log('✅ Pension Values Successfully Verified on React Native Web App!');
  });
});

describe('Verify Pension Values on Web (Browser)', () => {
  let totalValue, investmentGrowth;

  it('Fetch Total Value and Investment Growth from Web', async () => {
    // Locate elements in Web (Angular app)
    const totalValueElement = await $('span.blue-clr'); // Total Value
    const investmentGrowthElement = await $('span.text-success-700'); // Investment Growth

    // Ensure elements are displayed before fetching text
    await expect(totalValueElement).toBeDisplayed();
    await expect(investmentGrowthElement).toBeDisplayed();

    // Extract text values
    totalValue = await totalValueElement.getText();
    investmentGrowth = await investmentGrowthElement.getText();

    console.log(`Web App - Total Value: ${totalValue}`);
    console.log(`Web App - Investment Growth: ${investmentGrowth}`);
  });

  it('Validate Pension Values Are Not Empty', async () => {
    // Ensure values are properly fetched
    expect(totalValue).not.toBe('');
    expect(investmentGrowth).not.toBe('');

    console.log('✅ Pension Values Successfully Verified on Web!');
  });
});

Here’s a refined version of your Jira comment, ensuring clarity, coherence, and alignment with your last Jira update:


---

Progress Update on WebDriverIO & XPath Automation

We have been working on automating various flows using the XPath approach, particularly focusing on OpenAM login, customer dashboard navigation, and comparing the Ember dashboard hosted on AWS with legacy SLAL API data screens.

Currently, we can successfully execute the first comparison method and validate growth values. Now, we are extending the automation to cover additional components on the screen while refining our approach for improved efficiency.

Additionally, we have explored and implemented data retrieval from the local mock backend and SLAL server, enabling the setup of a local frontend and server to test and verify mock data components on-screen.

Next steps include refining the existing automation, structuring the code in a more organized manner, and implementing the Page Object Model (POM) for better maintainability. We will also continue discussions on the XPath approach moving forward.


---

This version improves readability and makes the progress and next steps clearer. Let me know if you need further refinements!

