
JIRA Comment: WebdriverIO & Appium Testing Approach

Summary of Trials & Findings:

Tried WebdriverIO with Appium: Successfully automated Chrome, but Edge was not possible, and Firefox is yet to be tested.

Tried WebdriverIO alone: All three browsers (Chrome, Edge, Firefox) were automatable after resolving driver issues.

Using the Mocha framework as the test runner for structuring and executing test cases.

Initial idea was to switch between Appium drivers for different browsers, but we realized that we can achieve the same by switching WebdriverIO config filesâ€”using WDIO + Appium for Mobile and WDIO without Appium for Web, while maintaining a common test suite.


Current Approach & Next Steps:

Common Test Strategy:

Using dynamic XPath for element selection across both Web & Mobile.

Currently focusing on Web tests, while placeholders are in place for Mobile XPath.

Next step is to validate conditional switching between Web & Mobile XPath based on config files and environment flags.


Recent Progress:

Successfully launched the Member Dashboard via OpenAM login in the browser.

Verified and interacted with React Native Web elements using XPath-based automation.


Next Steps:

Implement a Page Object Model (POM) design for better test structure.

Finalize XPath selection strategy to dynamically switch between Web & Mobile elements.

Continue testing across different browsers and validate Firefox automation.



ðŸ“Œ The goal is to have a single test suite that adapts dynamically to Web & Mobile using WebdriverIO while ensuring reliable element selection. ðŸš€

Refined Next Steps for JIRA Comment

Need to get a deeper understanding of the mobile test setup using Appium and emulators, ensuring element selection via XPath works reliably.

Following this, we plan to initiate a discussion on the XPath approach and the overall testing strategy to align on the next steps.


This keeps it structured and professional while clearly conveying the plan. ðŸš€ Let me know if you'd like further refinements! ðŸ˜Š


